/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.hyperbeast.form;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.hyperbeast.entity.HoaDon;
import com.hyperbeast.entity.HoaDonChiTiet;
import com.hyperbeast.entity.KhachHang;
import com.hyperbeast.entity.SanPham;
import com.hyperbeast.entity.SanPhamChiTiet;
import com.hyperbeast.model.hoaDonModel;
import com.hyperbeast.model.khachHangModel;
import com.hyperbeast.model.sanPhamModel;
import com.hyperbeast.utils.XacThuc;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Image;
import java.awt.List;
import java.awt.Panel;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class quanLyBanHang extends javax.swing.JPanel {

    /**
     * Creates new form test
     */
    private Frame main;
    int pageNumberSPCT;
    int pageSPCT = 1;
    int pageSelectSPCT;
    hoaDonModel hDModel = new hoaDonModel();
    sanPhamModel sPModel = new sanPhamModel();
    ArrayList listSPCTSize;
    ArrayList<SanPhamChiTiet> listTimKiem;
    khachHangModel kHModel = new khachHangModel();
    ArrayList<KhachHang> listKH;
    //final JPanel jPanelCamera = new JPanel();
    public quanLyBanHang() {
        initComponents();
        SanPhamChiTiet sp = new SanPhamChiTiet(1, 1, "test", 1, 12, "đỏ", 23, "cao su", "cao su", "11111", "không", "anh1.png");
        hinhThucTTCB.setSelectedIndex(0);
        statusPageSPCT();
        getPageSPCT();
        fillSanPham();
        fillHoaDon();
        fillmau();
        fillKichThuoc();
        fillChatLieu();
        fillChatLieuDe();
        resetLocSP(1);
        listTimKiem.add(sp);
        listKH = kHModel.getKhachHang();
        loadLichSuHD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//   void webCam () {
//        webCamPN.add(jPanelCamera);
//        Webcam webcam = Webcam.getDefault();
//        webcam.setViewSize(new Dimension(176, 144));
//
//        WebcamPanel webcamPanel = new WebcamPanel(webcam);
//        webcamPanel.setMirrored(true);
//
//        jPanelCamera.add(webcamPanel);
//        jPanelCamera.getParent().revalidate();
//    }
    // Màn lịch sử hóa đơn
    void loadLichSuHD () {
        ArrayList<HoaDon> listLSHD = hDModel.getLichSuHoaDon();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) lichSuHDTbl.getModel();
        model.setRowCount(0);
        for (HoaDon hoaDon : listLSHD) {
            for (KhachHang khachHang : listKH) {
                if(hoaDon.getMaKhachHang() == khachHang.getMaCTKH()) {
                    Object[] data = {
                        hoaDon.getMaHoaDon(),hoaDon.getTenNhanVien(), khachHang.getTenKH(),
                        hoaDon.getTongTien(), hoaDon.getNgayTao(), hoaDon.getTrangThai()
                    }; 
                    model.addRow(data);
                    break;
                } 
                if (hoaDon.getMaKhachHang() == 0)  {
                    Object[] data = {
                        hoaDon.getMaHoaDon(),hoaDon.getTenNhanVien(), "",
                        hoaDon.getTongTien(), hoaDon.getNgayTao(), hoaDon.getTrangThai()
                    }; 
                    model.addRow(data);
                    break;
                }
            }
        }
    }
    
    void getCTSPHoaDon() {
        int selectedRow = lichSuHDTbl.getSelectedRow();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) gioHangLSTbl.getModel();
        model.setRowCount(0);
        if(selectedRow < 0) {
            return;
        }
        int maHD = (int) lichSuHDTbl.getValueAt(selectedRow, 0);
        ArrayList<HoaDonChiTiet> listMaCTSP = hDModel.getHDCT(maHD);
        ArrayList<SanPhamChiTiet> listSPCT = sPModel.getSPCTAll();
        for (HoaDonChiTiet hdct : listMaCTSP) {
            int maCTSP = hdct.getMaCTSP();
            for (int i = 0; i < listSPCT.size(); i++) {
                if(maCTSP == listSPCT.get(i).getMaCTSP()) {
                    Object[] data = {
                        listSPCT.get(i).getMaCTSP(), listSPCT.get(i).getTenSP(), listSPCT.get(i).getTenMau(),listSPCT.get(i).getKichThuoc(),
                        listSPCT.get(i).getTenChatLieu(),listSPCT.get(i).getTenChatLieuDe(),hdct.getSoLuong(), hdct.getDonGia(),
                        hdct.getSoLuong()* hdct.getDonGia()
                    };
                    model.addRow(data);
                }
            }
        }
    }
    
    void getRowLSHD(int selectedRow) {
        int maHD = (int) lichSuHDTbl.getValueAt(selectedRow, 0);
        ArrayList<HoaDon> listLSHD = hDModel.getLichSuHoaDon();
        ArrayList<KhachHang> listKH = kHModel.getKhachHangTheoHD(maHD);
        tenHDTxt.setText("Thông tin chi tiết - Hóa đơn " +maHD);
        chiTietGioHangLbl.setText("Chi tiết giỏ hàng - Hóa đơn " +maHD);
        tenNVTxt.setText("" + lichSuHDTbl.getValueAt(selectedRow, 1));
        ngayTaoLStxt.setText("" +lichSuHDTbl.getValueAt(selectedRow, 4));
        tenKHTxt.setText(lichSuHDTbl.getValueAt(selectedRow, 2) + "");
        for (KhachHang khachHang : listKH) {
            sdtTxt.setText(khachHang.getSoDienThoai());
        }
        if(listKH.size() == 0) {
            sdtTxt.setText("");
        }
        float tienTong = (float) lichSuHDTbl.getValueAt(selectedRow, 3);
        String patternTienTe = "###,###,###";
        DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
        String stringTienTe = formatTienTe.format(tienTong);
        tongGiaTriTxt.setText(stringTienTe);
        for (HoaDon hoaDon : listLSHD) {
            if(hoaDon.getMaHoaDon() == maHD) {
                lyDoHuyTxt.setText(hoaDon.getGhiChu());
            }
        }
    }
    
    
    
    
    
    // Màn bán hàng
    void statusPageSPCT() {
        listSPCTSize = hDModel.getSizeCTSP();
        pageNumberSPCT = (int) Math.ceil((listSPCTSize.size() / 5.0));
        pageLbl.setText(pageSPCT + "/" + pageNumberSPCT);
    }

    void getPageSPCT() {
        pageSelectSPCT = (pageSPCT - 1) * 5;
    }

    void getDataRowHoaDon(int rowSelected) {
        maHoaDonTxt.setText(hoaDonTbl.getValueAt(rowSelected, 0) + "");
        ngayTaoTxt.setText(hoaDonTbl.getValueAt(rowSelected, 1) + "");
        tenNhanVienTxt.setText(hoaDonTbl.getValueAt(rowSelected, 2) + "");
    }
    void resetLocSP(int choice) {
        chatLieuDCB.setSelectedIndex(-1);
        chatLieuCB.setSelectedIndex(-1);
        kichThuocCB.setSelectedIndex(-1);
        mauSacCB.setSelectedIndex(-1);
        timTenSPTxt.setText("");
        statusPageSPCT();
        fillSanPham();
        if(choice == 2) {
            statusPageSPCT();
            fillSanPham();
        }
    }
    
    void searchSanPhamCT() {
        String tenSanPham = timTenSPTxt.getText();
        if(tenSanPham.isEmpty()) {
            tenSanPham = "";
        }
        String tenMau = (String) mauSacCB.getSelectedItem();
        String kichThuoc =  (String) kichThuocCB.getSelectedItem();
        String tenChatLieu = (String) chatLieuCB.getSelectedItem();
        String tenChatLieuDe = (String) chatLieuDCB.getSelectedItem();
        if(tenMau == null) {
            tenMau = "";
        }
        if(kichThuoc == null) {
            kichThuoc = "";
        }
        if(tenChatLieu == null) {
            tenChatLieu = "";
        }
        if(tenChatLieuDe == null) {
            tenChatLieuDe = "";
        }
        
        listTimKiem = sPModel.searchSanPhamCT(tenSanPham, tenMau, kichThuoc, tenChatLieu, tenChatLieuDe);
        
        DefaultTableModel model = (DefaultTableModel) sanPhamTbl.getModel();
        model.setRowCount(0);
        for (int i = 0; i < listTimKiem.size(); i++) {
                Object[] data = {
                         listTimKiem.get(i).getMaCTSP(), listTimKiem.get(i).getTenSP(), listTimKiem.get(i).getSoLuong(), listTimKiem.get(i).getTenMau(), listTimKiem.get(i).getKichThuoc(),
                         listTimKiem.get(i).getTenChatLieu(), listTimKiem.get(i).getTenChatLieuDe(), listTimKiem.get(i).getDonGia()
                     };
                     model.addRow(data);
        }
    }
    
    void getKhachHang() {
        String sdt = soDienThoaiTxt.getText();
        for (KhachHang khachHang : listKH) {
            if(!khachHang.getSoDienThoai().equals(sdt)) {
                tenKhachHangTxt.setText("Không tìm thấy khách hàng");
            } else {
                if(khachHang.getTrangThai() == 1) {
                    tenKhachHangTxt.setText(khachHang.getTenKH());
                    return;
                }
            }
        }
    }

    void tinhTienThua() {
        int rowSelected = hoaDonTbl.getSelectedRow();
        if (rowSelected < 0) {
            return;
        }
        if (tienKhachDuaTxt.getText().isEmpty()) {
            tienThuaLbl.setText("");
            return;
        }

        int tongTien = tinhTongTien();
        int tienKhachDua;

        try {
            tienKhachDua = Integer.parseInt(tienKhachDuaTxt.getText());
            int tienThua = tienKhachDua - tongTien;
            if (tienThua < 0) {
                tienThuaLbl.setText("");
                return;
            }
            String patternTienTe = "###,###,###";
            DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
            String stringTienTe = formatTienTe.format(tienThua);
            tienThuaLbl.setText(stringTienTe + "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chỉ Nhập số");
            tienKhachDuaTxt.setText("");
            tienThuaLbl.setText("");
        }

    }

    int tinhTongTien() {
        int rowSelected = hoaDonTbl.getSelectedRow();
        int maHD = (int) hoaDonTbl.getValueAt(rowSelected, 0);
        ArrayList<HoaDonChiTiet> listHDCT = hDModel.getHDCT(maHD);
        int tongTien = 0;
        for (HoaDonChiTiet hdct : listHDCT) {
            tongTien = (int) (tongTien + hdct.getSoLuong() * hdct.getDonGia());
        }
        return tongTien;
    }

    void addGioHang() {
        int rowSelectedHD = hoaDonTbl.getSelectedRow();
        int rowSelectedSP = sanPhamTbl.getSelectedRow();
        int maHD;
        int maCTSP;
        int soLuongThem;
        int soLuongSP;
        int soLuongCuoi;
        float donGia;
        float thanhTien;
        if (rowSelectedHD < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn thao tác");
            return;
        }
        maHD = (int) hoaDonTbl.getValueAt(rowSelectedHD, 0);
        maCTSP = (int) sanPhamTbl.getValueAt(rowSelectedSP, 0);

        soLuongSP = (int) sanPhamTbl.getValueAt(rowSelectedSP, 2);
        donGia = (float) sanPhamTbl.getValueAt(rowSelectedSP, 7);
        String check = JOptionPane.showInputDialog(this, "Nhập số lượng");
        if (check == null) {
            return;
        }
        try {
            soLuongThem = Integer.parseInt(check);
            if (soLuongThem <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ");
                return;
            }
            if (soLuongThem > soLuongSP) {
                JOptionPane.showMessageDialog(this, "Thất bại: vượt quá số lượng sản phẩm");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sai định dạng số lượng");
            return;
        }
        ArrayList<HoaDonChiTiet> listHDCT = hDModel.getHDCT(maHD);
        soLuongCuoi = soLuongSP - soLuongThem;
        for (HoaDonChiTiet hdct : listHDCT) {
            if (hdct.getMaCTSP() == maCTSP) {
                int soLuongTrung = hdct.getSoLuong() + soLuongThem;
                float thanhTien2 = soLuongTrung * donGia;
                hDModel.updateHDCT(maHD, maCTSP, thanhTien2, soLuongTrung);
                fillGioHang(maHD);
                hDModel.updateCTSP(maCTSP, soLuongCuoi);
                fillSanPham();
                int tongTien = tinhTongTien();
                String patternTienTe = "###,###,###";
                DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
                String stringTienTe = formatTienTe.format(tongTien);
                tongTienLbl2.setText(stringTienTe);
                return;
            }
        }
        hDModel.insertHDCT(maCTSP, maHD, soLuongThem, donGia);
        fillGioHang(maHD);
        hDModel.updateCTSP(maCTSP, soLuongCuoi);
        fillSanPham();
        int tongTien = tinhTongTien();
        String patternTienTe = "###,###,###";
        DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
        String stringTienTe = formatTienTe.format(tongTien);
        tongTienLbl2.setText(stringTienTe);
    }

    void fillSanPham() {
        ArrayList<SanPhamChiTiet> listSPCT = hDModel.getSanPhamCT(pageSelectSPCT);
        DefaultTableModel model = (DefaultTableModel) sanPhamTbl.getModel();
        model.setRowCount(0);
        for (SanPhamChiTiet spct : listSPCT) {
            Object[] data = {
                spct.getMaCTSP(), spct.getTenSP(), spct.getSoLuong(), spct.getTenMau(), spct.getKichThuoc(),
                spct.getTenChatLieu(), spct.getTenChatLieuDe(), spct.getDonGia()
            };
            model.addRow(data);
        }
    }

    void fillGioHang(int maHD) {
        ArrayList<HoaDonChiTiet> listHDCT = hDModel.getHDCT(maHD);
        DefaultTableModel model = (DefaultTableModel) gioHangTbl.getModel();
        model.setRowCount(0);
        for (HoaDonChiTiet hdct : listHDCT) {
            Object[] data = {
                hdct.getMaCTSP(), hdct.getTenSanPham(), hdct.getSoLuong(), hdct.getDonGia(),
                hdct.getSoLuong() * hdct.getDonGia()
            };
            model.addRow(data);
        }
    }

    void insertHoaDonCho() {
        LocalDateTime ldt = LocalDateTime.now();
        String dateNow = (DateTimeFormatter.ofPattern("MM-dd-yyyy", Locale.ENGLISH).format(ldt));
        String ngayTao = dateNow;
        String ngayCapNhat = dateNow;
        String trangThai = "Chờ thanh toán";
        int maTaiKhoan ;
        if(XacThuc.isLogin()) {
            JOptionPane.showMessageDialog(this, "Chưa đăng nhập");
            return;
        }
        maTaiKhoan = XacThuc.user.getMaNV();
        boolean check = hDModel.insertHoaDonCho(ngayTao, ngayCapNhat, trangThai, maTaiKhoan);
        if (check == true) {
            JOptionPane.showMessageDialog(this, "Tạo hóa đơn mới thành công");
            fillHoaDon();
        } else {
            JOptionPane.showMessageDialog(this, "Tạo hóa đơn mới thất bại");
            return;
        }
    }

    void updateGioHang() {
        int rowSelectedHD = hoaDonTbl.getSelectedRow();
        int rowSelectedGH = gioHangTbl.getSelectedRow();
        int soLuongSua;
        if (rowSelectedHD < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn sản phẩm trong giỏ");
            return;
        }
        if (rowSelectedGH < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn sản phẩm trong giỏ");
            return;
        }
        int maHD = (int) hoaDonTbl.getValueAt(rowSelectedHD, 0);
        int maCTSP = (int) gioHangTbl.getValueAt(rowSelectedGH, 0);
        String check = JOptionPane.showInputDialog(this, "Nhập số lượng muốn giảm");
        if (check == null) {
            return;
        }
        int soLuongGH = (int) gioHangTbl.getValueAt(rowSelectedGH, 2);
        try {
            soLuongSua = Integer.parseInt(check);
            int soLuongCapNhat = soLuongGH - soLuongSua;
            float donGia = (float) gioHangTbl.getValueAt(rowSelectedGH, 3);
            if (soLuongSua <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ");
                return;
            }
            int soLuongSPCT = hDModel.getSoLuongCT(maCTSP);
            int tongSoLuongSP = soLuongSPCT + soLuongGH;
            int soLuongCapNhatSP;
            if(soLuongSua > tongSoLuongSP) {
                JOptionPane.showMessageDialog(this, "Số lượng lớn hơn số sản phẩm hiện có");
                return;
            }
            soLuongCapNhatSP = tongSoLuongSP - soLuongSua;
            hDModel.updateHDCT(maHD, maCTSP, donGia, soLuongSua);
            hDModel.updateCTSP(maCTSP, soLuongCapNhatSP);
            fillSanPham();
            fillGioHang(maHD);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chỉ nhập số");
            return;
        }
    }

    void deleteGioHang() {
        int rowSelectedHD = hoaDonTbl.getSelectedRow();
        int maHD = (int) hoaDonTbl.getValueAt(rowSelectedHD, 0);
        ArrayList<HoaDonChiTiet> listHDCT = hDModel.getHDCT(maHD);
        int rowSelectedGH = gioHangTbl.getSelectedRow();
        int maCTSP = (int) gioHangTbl.getValueAt(rowSelectedGH, 0);
        int soLuongXoa = (int) gioHangTbl.getValueAt(rowSelectedGH, 2);
        int maHDCT = listHDCT.get(rowSelectedGH).getMaHDCT();
        int choice = JOptionPane.showConfirmDialog(this, "Xác nhận xóa khỏi giỏ hàng", "HyperBeast", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            hDModel.deleteHDCT(maHDCT);
            int soLuongSP = sPModel.getSoluongCTSP(maCTSP);
            int soLuongCuoi = soLuongXoa + soLuongSP;
            fillGioHang(maHD);
            hDModel.updateCTSP(maCTSP, soLuongCuoi);
            fillSanPham();
            int tongTien = tinhTongTien();
            String patternTienTe = "###,###,###";
            DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
            String stringTienTe = formatTienTe.format(tongTien);
            tongTienLbl2.setText(stringTienTe);
        }
    }

    void deleteAllGH() {
        ArrayList<HoaDonChiTiet> listMaCTSP = new ArrayList();
        int rowSelectedHD = hoaDonTbl.getSelectedRow();
        if (rowSelectedHD < 0) {
            return;
        }
        for (int i = 0; i < gioHangTbl.getRowCount(); i++) {
            int maCTSP = (int) gioHangTbl.getValueAt(i, 0);
            int soLuong = (int) gioHangTbl.getValueAt(i, 2);
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setMaCTSP(maCTSP);
            hdct.setSoLuong(soLuong);
            listMaCTSP.add(hdct);
        }
        for (int i = 0; i < listMaCTSP.size(); i++) {
            int soLuongSP = sPModel.getSoluongCTSP(listMaCTSP.get(i).getMaCTSP());
            int soLuongCuoi = listMaCTSP.get(i).getSoLuong() + soLuongSP;
            hDModel.updateCTSP(listMaCTSP.get(i).getMaCTSP(), soLuongCuoi);
        }
        int maHD = (int) hoaDonTbl.getValueAt(rowSelectedHD, 0);
        ArrayList<HoaDonChiTiet> listHDCT = hDModel.getHDCT(maHD);
        for (HoaDonChiTiet hdct : listHDCT) {
            hDModel.deleteHDCT(hdct.getMaHDCT());
        }
        fillGioHang(maHD);
        fillSanPham();
        int tongTien = tinhTongTien();
        String patternTienTe = "###,###,###";
        DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
        String stringTienTe = formatTienTe.format(tongTien);
        tongTienLbl2.setText(stringTienTe);
    }

    void updateHoaDon(String trangThai, String mesage) {
        LocalDateTime ldt = LocalDateTime.now();
        String dateNow = (DateTimeFormatter.ofPattern("MM-dd-yyyy", Locale.ENGLISH).format(ldt));
        String ngayCapNhat = dateNow;
        String sdt = soDienThoaiTxt.getText();
        String tienThua = tienThuaLbl.getText();
        if(tienThua.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa đủ tiền thanh toán");
            return;
        }
        int rowSelected = hoaDonTbl.getSelectedRow();
        if (rowSelected < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn thao tác");
            return;
        }
        int maHD = (int) hoaDonTbl.getValueAt(rowSelected, 0);
        float tongTien = tinhTongTien();
        int maTKKH = 0;
        String hinhThucThanhToan = hinhThucTTCB.getSelectedItem().toString();
            for (KhachHang khachHang : listKH) {
                if(khachHang.getTrangThai()== 1) {
                    if(khachHang.getSoDienThoai().equals(sdt)) {
                        maTKKH = khachHang.getMaCTKH();
                    }
                }
            }
        if(maTKKH == 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn khách hàng");
            return;
        }
        int choice = JOptionPane.showConfirmDialog(this, mesage, "HyperBeast", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            hDModel.updateHoaDon(maHD, ngayCapNhat, trangThai, maTKKH, tongTien);
            hDModel.insertThanhToan(maHD, maTKKH, hinhThucThanhToan);
            fillHoaDon();
        }
    }
    
    void huyHoaDon () {
        int rowSelected = hoaDonTbl.getSelectedRow();
        if (rowSelected < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn thao tác");
            return;
        }
        int maHD = (int) hoaDonTbl.getValueAt(rowSelected, 0);
        String lyDoHuy = null;
        lyDoHuy = JOptionPane.showInputDialog(this,"Nhập lý do hủy");
        if(lyDoHuy == null) {
            return;
        }
        hDModel.updateHuyHoaDon(maHD, "Đã Hủy", lyDoHuy);
        deleteAllGH();
        fillHoaDon();
    }

    void fillHoaDon() {
        String trangThai = null;
        if (taiCaRD.isSelected()) {
            trangThai = "";
        }
        if (choThanhToanRD.isSelected()) {
            trangThai = "Chờ thanh toán";
        }
        if (daThanhToanRD.isSelected()) {
            trangThai = "Đã thanh toán";
        }
        if (daHuyRD.isSelected()) {
            trangThai = "Đã hủy";
        }
        ArrayList<HoaDon> listHoaDon = hDModel.getHoaDonTrangThai(trangThai);
        DefaultTableModel model = (DefaultTableModel) hoaDonTbl.getModel();
        model.setRowCount(0);
        for (HoaDon hd : listHoaDon) {
            Object[] data = {
                hd.getMaHoaDon(), hd.getNgayTao(), hd.getTenNhanVien(), hd.getTrangThai()
            };
            model.addRow(data);
        }
    }
    
    void fillmau () {
        ArrayList<String> listMau = new ArrayList<>();
        listMau = sPModel.getMauSac();
        DefaultComboBoxModel model = (DefaultComboBoxModel) mauSacCB.getModel();
        model.removeAllElements();
        String[] mauSac = new String[listMau.size()];
        for (int i = 0; i < listMau.size(); i++) {
            mauSac[i] = listMau.get(i);
        }
        mauSacCB.setModel(new javax.swing.DefaultComboBoxModel(mauSac));
    }
    void fillKichThuoc () {
        ArrayList<String> listKichTHuoc = new ArrayList<>();
        listKichTHuoc = sPModel.getKichThuoc();
        DefaultComboBoxModel model = (DefaultComboBoxModel) kichThuocCB.getModel();
        model.removeAllElements();
        String[] kichThuoc = new String[listKichTHuoc.size()];
        for (int i = 0; i < listKichTHuoc.size(); i++) {
            kichThuoc[i] = listKichTHuoc.get(i);
        }
        kichThuocCB.setModel(new javax.swing.DefaultComboBoxModel(kichThuoc));
    }
    
    void fillChatLieu () {
        ArrayList<String> listChatLieu = new ArrayList<>();
        listChatLieu = sPModel.getChatLieu();
        DefaultComboBoxModel model = (DefaultComboBoxModel) chatLieuCB.getModel();
        model.removeAllElements();
        String[] chatLieu = new String[listChatLieu.size()];
        for (int i = 0; i < listChatLieu.size(); i++) {
            chatLieu[i] = listChatLieu.get(i);
        }
        chatLieuCB.setModel(new javax.swing.DefaultComboBoxModel(chatLieu));
    }
    
    void fillChatLieuDe () {
        ArrayList<String> listChatLieuDe = new ArrayList<>();
        listChatLieuDe = sPModel.getChatLieuDe();
        DefaultComboBoxModel model = (DefaultComboBoxModel) chatLieuDCB.getModel();
        model.removeAllElements();
        String[] chatLieuDe = new String[listChatLieuDe.size()];
        for (int i = 0; i < listChatLieuDe.size(); i++) {
            chatLieuDe[i] = listChatLieuDe.get(i);
        }
        chatLieuDCB.setModel(new javax.swing.DefaultComboBoxModel(chatLieuDe));
    }
    

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        materialTabbed1 = new tabbed.MaterialTabbed();
        jPanel1 = new javax.swing.JPanel();
        panelBorder3 = new com.hyperbeast.swing.PanelBorder();
        jScrollPane4 = new javax.swing.JScrollPane();
        hoaDonTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        taiCaRD = new com.hyperbeast.swing.RadioButtonCustom();
        choThanhToanRD = new com.hyperbeast.swing.RadioButtonCustom();
        daThanhToanRD = new com.hyperbeast.swing.RadioButtonCustom();
        daHuyRD = new com.hyperbeast.swing.RadioButtonCustom();
        panelBorder1 = new com.hyperbeast.swing.PanelBorder();
        tenGioHnagLbl = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        gioHangTbl = new javax.swing.JTable();
        suaBtn = new javax.swing.JButton();
        xoaBtn = new javax.swing.JButton();
        panelBorder2 = new com.hyperbeast.swing.PanelBorder();
        jScrollPane5 = new javax.swing.JScrollPane();
        sanPhamTbl = new javax.swing.JTable();
        timTenSPTxt = new com.hyperbeast.swing.TextField();
        jLabel4 = new javax.swing.JLabel();
        mauSacCB = new com.hyperbeast.swing.Combobox();
        kichThuocCB = new com.hyperbeast.swing.Combobox();
        chatLieuCB = new com.hyperbeast.swing.Combobox();
        chatLieuDCB = new com.hyperbeast.swing.Combobox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        pageLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tongTienLbl = new com.hyperbeast.swing.PanelBorder();
        jLabel5 = new javax.swing.JLabel();
        maHoaDonTxt = new com.hyperbeast.swing.TextField();
        ngayTaoTxt = new com.hyperbeast.swing.TextField();
        soDienThoaiTxt = new com.hyperbeast.swing.TextField();
        hinhThucTTCB = new com.hyperbeast.swing.Combobox();
        tienKhachDuaTxt = new com.hyperbeast.swing.TextField();
        thanhToanBtn = new javax.swing.JButton();
        huyHoaDonBtn = new javax.swing.JButton();
        tenNhanVienTxt = new com.hyperbeast.swing.TextField();
        testLbl = new javax.swing.JLabel();
        tenKhachHangTxt = new com.hyperbeast.swing.TextField();
        testLbl2 = new javax.swing.JLabel();
        tongTienLbl2 = new javax.swing.JLabel();
        tienThuaLbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        panelBorder4 = new com.hyperbeast.swing.PanelBorder();
        jScrollPane2 = new javax.swing.JScrollPane();
        gioHangLSTbl = new javax.swing.JTable();
        chiTietGioHangLbl = new javax.swing.JLabel();
        panelBorder5 = new com.hyperbeast.swing.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        lichSuHDTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        panelBorder6 = new com.hyperbeast.swing.PanelBorder();
        tenHDTxt = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tenNVTxt = new javax.swing.JLabel();
        ngayTaoLStxt = new javax.swing.JLabel();
        tenKHTxt = new javax.swing.JLabel();
        sdtTxt = new javax.swing.JLabel();
        tongGiaTriTxt = new javax.swing.JLabel();
        giamGiaTxt = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        lyDoHuyTxt = new javax.swing.JTextPane();

        setForeground(new java.awt.Color(255, 255, 255));

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        hoaDonTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày Tạo", "Tên nhân viên", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hoaDonTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hoaDonTblMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hoaDonTbl);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Hóa đơn");

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Tạo hóa đơn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(taiCaRD);
        taiCaRD.setSelected(true);
        taiCaRD.setText("Tất cả");
        taiCaRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taiCaRDActionPerformed(evt);
            }
        });

        buttonGroup1.add(choThanhToanRD);
        choThanhToanRD.setText("Chờ thanh toán");
        choThanhToanRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choThanhToanRDActionPerformed(evt);
            }
        });

        buttonGroup1.add(daThanhToanRD);
        daThanhToanRD.setText("Đã thanh toán");
        daThanhToanRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daThanhToanRDActionPerformed(evt);
            }
        });

        buttonGroup1.add(daHuyRD);
        daHuyRD.setText("Đã hủy");
        daHuyRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daHuyRDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(taiCaRD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choThanhToanRD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(daThanhToanRD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(daHuyRD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(taiCaRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choThanhToanRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(daThanhToanRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(daHuyRD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        tenGioHnagLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tenGioHnagLbl.setForeground(new java.awt.Color(0, 102, 255));
        tenGioHnagLbl.setText("Giỏ hàng");

        gioHangTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã CTSP", "Tên sản phẩm", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(gioHangTbl);

        suaBtn.setBackground(new java.awt.Color(0, 102, 255));
        suaBtn.setForeground(new java.awt.Color(255, 255, 255));
        suaBtn.setText("Sửa");
        suaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaBtnActionPerformed(evt);
            }
        });

        xoaBtn.setBackground(new java.awt.Color(0, 102, 255));
        xoaBtn.setForeground(new java.awt.Color(255, 255, 255));
        xoaBtn.setText("Xóa");
        xoaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tenGioHnagLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(suaBtn)
                            .addComponent(xoaBtn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tenGioHnagLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(suaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(xoaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        sanPhamTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CTSP", "Tên sản phẩm", "Số lượng", "Màu sắc", "Kích thước", "Chất liệu ", "Chất liệu đế", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sanPhamTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sanPhamTblMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(sanPhamTbl);

        timTenSPTxt.setLabelText("Tên sản phẩm");
        timTenSPTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timTenSPTxtKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("Sản phẩm");

        mauSacCB.setLabeText("Màu sắc");
        mauSacCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mauSacCBActionPerformed(evt);
            }
        });

        kichThuocCB.setLabeText("Kích thước");
        kichThuocCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kichThuocCBActionPerformed(evt);
            }
        });

        chatLieuCB.setLabeText("Chất liệu");
        chatLieuCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatLieuCBActionPerformed(evt);
            }
        });

        chatLieuDCB.setLabeText("Chất liệu đế");
        chatLieuDCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatLieuDCBActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText(">>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 102, 255));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("<<");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        pageLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pageLbl.setText("Trang");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hyperbeast/icon/arrow.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addComponent(timTenSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mauSacCB, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kichThuocCB, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chatLieuCB, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addComponent(chatLieuDCB, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timTenSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mauSacCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kichThuocCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chatLieuCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chatLieuDCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pageLbl))
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tongTienLbl.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Thông tin hóa đơn");

        maHoaDonTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        maHoaDonTxt.setEnabled(false);
        maHoaDonTxt.setLabelText("Mã hóa đơn");

        ngayTaoTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        ngayTaoTxt.setEnabled(false);
        ngayTaoTxt.setLabelText("Ngày tạo");

        soDienThoaiTxt.setLabelText("Số điện thoại khách hàng");
        soDienThoaiTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                soDienThoaiTxtKeyReleased(evt);
            }
        });

        hinhThucTTCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trực tiếp", "Chuyển khoản" }));
        hinhThucTTCB.setSelectedIndex(-1);
        hinhThucTTCB.setLabeText("Hình thức thanh toán");
        hinhThucTTCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hinhThucTTCBActionPerformed(evt);
            }
        });

        tienKhachDuaTxt.setForeground(new java.awt.Color(0, 0, 0));
        tienKhachDuaTxt.setLabelText("Tiền khách đưa");
        tienKhachDuaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tienKhachDuaTxtKeyReleased(evt);
            }
        });

        thanhToanBtn.setBackground(new java.awt.Color(0, 102, 255));
        thanhToanBtn.setForeground(new java.awt.Color(255, 255, 255));
        thanhToanBtn.setText("Thanh toán");
        thanhToanBtn.setEnabled(false);
        thanhToanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thanhToanBtnActionPerformed(evt);
            }
        });

        huyHoaDonBtn.setBackground(new java.awt.Color(0, 102, 255));
        huyHoaDonBtn.setForeground(new java.awt.Color(255, 255, 255));
        huyHoaDonBtn.setText(" Hủy hóa đơn");
        huyHoaDonBtn.setEnabled(false);
        huyHoaDonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyHoaDonBtnActionPerformed(evt);
            }
        });

        tenNhanVienTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tenNhanVienTxt.setEnabled(false);
        tenNhanVienTxt.setLabelText("Tên nhân viên");

        testLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        testLbl.setForeground(new java.awt.Color(255, 0, 51));
        testLbl.setText("Tổng tiền :");

        tenKhachHangTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tenKhachHangTxt.setEnabled(false);
        tenKhachHangTxt.setLabelText("Tên khách hàng");

        testLbl2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        testLbl2.setForeground(new java.awt.Color(0, 0, 0));
        testLbl2.setText("Tiền thừa :");

        tongTienLbl2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tongTienLbl2.setForeground(new java.awt.Color(255, 0, 51));

        tienThuaLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tienThuaLbl.setForeground(new java.awt.Color(0, 0, 0));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hyperbeast/icon/add.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tongTienLblLayout = new javax.swing.GroupLayout(tongTienLbl);
        tongTienLbl.setLayout(tongTienLblLayout);
        tongTienLblLayout.setHorizontalGroup(
            tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tongTienLblLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .addComponent(maHoaDonTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ngayTaoTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hinhThucTTCB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tienKhachDuaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenNhanVienTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenKhachHangTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tongTienLblLayout.createSequentialGroup()
                        .addComponent(thanhToanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(huyHoaDonBtn))
                    .addGroup(tongTienLblLayout.createSequentialGroup()
                        .addComponent(testLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tongTienLbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tongTienLblLayout.createSequentialGroup()
                        .addComponent(testLbl2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tienThuaLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tongTienLblLayout.createSequentialGroup()
                        .addComponent(soDienThoaiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tongTienLblLayout.setVerticalGroup(
            tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tongTienLblLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maHoaDonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ngayTaoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tenNhanVienTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(soDienThoaiTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addComponent(tenKhachHangTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tongTienLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hinhThucTTCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tienKhachDuaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tienThuaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tongTienLblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thanhToanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(huyHoaDonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tongTienLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tongTienLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBorder3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        materialTabbed1.addTab("Hóa đơn", jPanel1);

        panelBorder4.setBackground(new java.awt.Color(255, 255, 255));

        gioHangLSTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CTSP", "Tên sản phẩm", "Màu sắc", "Kích thước", "Chất liệu chính", "Chất liệu đế", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jScrollPane2.setViewportView(gioHangLSTbl);

        chiTietGioHangLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        chiTietGioHangLbl.setForeground(new java.awt.Color(0, 102, 255));
        chiTietGioHangLbl.setText("Chi tiết giỏ hàng");

        javax.swing.GroupLayout panelBorder4Layout = new javax.swing.GroupLayout(panelBorder4);
        panelBorder4.setLayout(panelBorder4Layout);
        panelBorder4Layout.setHorizontalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chiTietGioHangLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        panelBorder4Layout.setVerticalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(chiTietGioHangLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        panelBorder5.setBackground(new java.awt.Color(255, 255, 255));

        lichSuHDTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên người tạo", "Tên khách hàng", "Tổng giá trị", "Ngày tạo", "Trạng thái"
            }
        ));
        lichSuHDTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lichSuHDTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lichSuHDTbl);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("Lịch sử hóa đơn");

        javax.swing.GroupLayout panelBorder5Layout = new javax.swing.GroupLayout(panelBorder5);
        panelBorder5.setLayout(panelBorder5Layout);
        panelBorder5Layout.setHorizontalGroup(
            panelBorder5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelBorder5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder5Layout.setVerticalGroup(
            panelBorder5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBorder6.setBackground(new java.awt.Color(255, 255, 255));

        tenHDTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tenHDTxt.setForeground(new java.awt.Color(0, 102, 255));
        tenHDTxt.setText("Thông tin chi tiết");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Tên Nhân viên :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Ngày tạo");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Tên khách hàng");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Số điện thoại");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Tổng tiền:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Giảm giá");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Lý do Hủy");

        tenNVTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tenNVTxt.setForeground(new java.awt.Color(0, 0, 0));

        ngayTaoLStxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ngayTaoLStxt.setForeground(new java.awt.Color(0, 0, 0));

        tenKHTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tenKHTxt.setForeground(new java.awt.Color(0, 0, 0));

        sdtTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sdtTxt.setForeground(new java.awt.Color(0, 0, 0));

        tongGiaTriTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tongGiaTriTxt.setForeground(new java.awt.Color(255, 0, 51));

        giamGiaTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        giamGiaTxt.setForeground(new java.awt.Color(0, 0, 0));

        lyDoHuyTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lyDoHuyTxt.setForeground(new java.awt.Color(0, 0, 0));
        lyDoHuyTxt.setEnabled(false);
        jScrollPane7.setViewportView(lyDoHuyTxt);

        javax.swing.GroupLayout panelBorder6Layout = new javax.swing.GroupLayout(panelBorder6);
        panelBorder6.setLayout(panelBorder6Layout);
        panelBorder6Layout.setHorizontalGroup(
            panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addComponent(tenHDTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelBorder6Layout.createSequentialGroup()
                        .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tenNVTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ngayTaoLStxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tenKHTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sdtTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tongGiaTriTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(giamGiaTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelBorder6Layout.setVerticalGroup(
            panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(tenHDTxt)
                .addGap(39, 39, 39)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenNVTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ngayTaoLStxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenKHTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sdtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tongGiaTriTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(giamGiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(panelBorder5, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelBorder6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panelBorder4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        materialTabbed1.addTab("Lịch sử hóa đơn", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(materialTabbed1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(materialTabbed1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (pageSPCT <= pageNumberSPCT) {
            if (pageSPCT == 1) {
                return;
            }
            pageSPCT--;
            getPageSPCT();
            statusPageSPCT();
            fillSanPham();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (pageSPCT >= 1 && pageSPCT < pageNumberSPCT) {
            pageSPCT++;
            getPageSPCT();
            statusPageSPCT();
            fillSanPham();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        insertHoaDonCho();
        loadLichSuHD();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hoaDonTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hoaDonTblMouseClicked
        // TODO add your handling code here:
        int rowSelected = hoaDonTbl.getSelectedRow();
        getDataRowHoaDon(rowSelected);
        int maHD = (int) hoaDonTbl.getValueAt(rowSelected, 0);
        String maHoaDon = "" + hoaDonTbl.getValueAt(rowSelected, 0);
        String trangThai = "" + hoaDonTbl.getValueAt(rowSelected, 3);
        if (trangThai.equals("Chờ thanh toán")) {
            thanhToanBtn.setEnabled(true);
            huyHoaDonBtn.setEnabled(true);
            suaBtn.setEnabled(true);
            xoaBtn.setEnabled(true);
            tienKhachDuaTxt.setEnabled(true);
        } else {
            thanhToanBtn.setEnabled(false);
            huyHoaDonBtn.setEnabled(false);
            suaBtn.setEnabled(false);
            xoaBtn.setEnabled(false);
            tienKhachDuaTxt.setEnabled(false);
        }
        tenGioHnagLbl.setText("Giỏ hàng - Hóa đơn " + maHoaDon);
        fillGioHang(maHD);

        int tongTien = tinhTongTien();
        String patternTienTe = "###,###,###";
        DecimalFormat formatTienTe = new DecimalFormat(patternTienTe);
        String stringTienTe = formatTienTe.format(tongTien);
        tongTienLbl2.setText(stringTienTe);
    }//GEN-LAST:event_hoaDonTblMouseClicked

    private void sanPhamTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sanPhamTblMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int rowSelected = hoaDonTbl.getSelectedRow();
            String trangThai = "" + hoaDonTbl.getValueAt(rowSelected, 3);
            if (trangThai.equals("Đã thanh toán")) {
                return;
            }
            addGioHang();
        }
    }//GEN-LAST:event_sanPhamTblMousePressed

    private void xoaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaBtnActionPerformed
        // TODO add your handling code here:
        deleteGioHang();
    }//GEN-LAST:event_xoaBtnActionPerformed

    private void tienKhachDuaTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tienKhachDuaTxtKeyReleased
        // TODO add your handling code here:
        tinhTienThua();

    }//GEN-LAST:event_tienKhachDuaTxtKeyReleased

    private void hinhThucTTCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hinhThucTTCBActionPerformed
        // TODO add your handling code here:
        int rowSelected = hoaDonTbl.getSelectedRow();
        if (rowSelected < 0) {
            return;
        }
        if (hinhThucTTCB.getSelectedIndex() == 1) {
            int tongTien = tinhTongTien();
            tienKhachDuaTxt.setEnabled(false);
            tienKhachDuaTxt.setText(tongTien + "");
            tinhTienThua();
        } else {
            tienKhachDuaTxt.setEnabled(true);
        }
    }//GEN-LAST:event_hinhThucTTCBActionPerformed

    private void thanhToanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thanhToanBtnActionPerformed
        // TODO add your handling code here:
        updateHoaDon("Đã thanh toán", "Xác nhận thanh toán hóa đơn");
        loadLichSuHD();
    }//GEN-LAST:event_thanhToanBtnActionPerformed

    private void suaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaBtnActionPerformed
        // TODO add your handling code here:
        updateGioHang();
        
    }//GEN-LAST:event_suaBtnActionPerformed

    private void huyHoaDonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyHoaDonBtnActionPerformed
        // TODO add your handling code here:
        huyHoaDon();
        loadLichSuHD();
    }//GEN-LAST:event_huyHoaDonBtnActionPerformed

    private void daHuyRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daHuyRDActionPerformed
        // TODO add your handling code here:
        fillHoaDon();
    }//GEN-LAST:event_daHuyRDActionPerformed

    private void taiCaRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taiCaRDActionPerformed
        // TODO add your handling code here:
        fillHoaDon();
    }//GEN-LAST:event_taiCaRDActionPerformed

    private void choThanhToanRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choThanhToanRDActionPerformed
        // TODO add your handling code here:
        fillHoaDon();
    }//GEN-LAST:event_choThanhToanRDActionPerformed

    private void daThanhToanRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daThanhToanRDActionPerformed
        // TODO add your handling code here:
        fillHoaDon();
    }//GEN-LAST:event_daThanhToanRDActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        resetLocSP(2);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void mauSacCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mauSacCBActionPerformed
        // TODO add your handling code here:
        searchSanPhamCT();
        if(listTimKiem.size() == 0) {
            JOptionPane.showMessageDialog(main, "Không tìm thấy sản phẩm");
            return;
        }
    }//GEN-LAST:event_mauSacCBActionPerformed

    private void kichThuocCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kichThuocCBActionPerformed
        // TODO add your handling code here:
        searchSanPhamCT();
    }//GEN-LAST:event_kichThuocCBActionPerformed

    private void chatLieuCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatLieuCBActionPerformed
        // TODO add your handling code here:
        searchSanPhamCT();
    }//GEN-LAST:event_chatLieuCBActionPerformed

    private void chatLieuDCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatLieuDCBActionPerformed
        // TODO add your handling code here:
        searchSanPhamCT();
    }//GEN-LAST:event_chatLieuDCBActionPerformed

    private void timTenSPTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timTenSPTxtKeyReleased
        // TODO add your handling code here:
        searchSanPhamCT();
    }//GEN-LAST:event_timTenSPTxtKeyReleased

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        new kichThuocJDialog(main, true).setVisible(true);
        fillKichThuoc();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void soDienThoaiTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soDienThoaiTxtKeyReleased
        // TODO add your handling code here:
        getKhachHang();
    }//GEN-LAST:event_soDienThoaiTxtKeyReleased

    private void lichSuHDTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lichSuHDTblMouseClicked
        // TODO add your handling code here:
        int selectedRow = lichSuHDTbl.getSelectedRow();
        if(selectedRow < 0) {
            return;
        }
        getCTSPHoaDon();
        getRowLSHD(selectedRow);
    }//GEN-LAST:event_lichSuHDTblMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hyperbeast.swing.Combobox chatLieuCB;
    private com.hyperbeast.swing.Combobox chatLieuDCB;
    private javax.swing.JLabel chiTietGioHangLbl;
    private com.hyperbeast.swing.RadioButtonCustom choThanhToanRD;
    private com.hyperbeast.swing.RadioButtonCustom daHuyRD;
    private com.hyperbeast.swing.RadioButtonCustom daThanhToanRD;
    private javax.swing.JLabel giamGiaTxt;
    private javax.swing.JTable gioHangLSTbl;
    private javax.swing.JTable gioHangTbl;
    private com.hyperbeast.swing.Combobox hinhThucTTCB;
    private javax.swing.JTable hoaDonTbl;
    private javax.swing.JButton huyHoaDonBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private com.hyperbeast.swing.Combobox kichThuocCB;
    private javax.swing.JTable lichSuHDTbl;
    private javax.swing.JTextPane lyDoHuyTxt;
    private com.hyperbeast.swing.TextField maHoaDonTxt;
    private tabbed.MaterialTabbed materialTabbed1;
    private com.hyperbeast.swing.Combobox mauSacCB;
    private javax.swing.JLabel ngayTaoLStxt;
    private com.hyperbeast.swing.TextField ngayTaoTxt;
    private javax.swing.JLabel pageLbl;
    private com.hyperbeast.swing.PanelBorder panelBorder1;
    private com.hyperbeast.swing.PanelBorder panelBorder2;
    private com.hyperbeast.swing.PanelBorder panelBorder3;
    private com.hyperbeast.swing.PanelBorder panelBorder4;
    private com.hyperbeast.swing.PanelBorder panelBorder5;
    private com.hyperbeast.swing.PanelBorder panelBorder6;
    private javax.swing.JTable sanPhamTbl;
    private javax.swing.JLabel sdtTxt;
    private com.hyperbeast.swing.TextField soDienThoaiTxt;
    private javax.swing.JButton suaBtn;
    private com.hyperbeast.swing.RadioButtonCustom taiCaRD;
    private javax.swing.JLabel tenGioHnagLbl;
    private javax.swing.JLabel tenHDTxt;
    private javax.swing.JLabel tenKHTxt;
    private com.hyperbeast.swing.TextField tenKhachHangTxt;
    private javax.swing.JLabel tenNVTxt;
    private com.hyperbeast.swing.TextField tenNhanVienTxt;
    private javax.swing.JLabel testLbl;
    private javax.swing.JLabel testLbl2;
    private javax.swing.JButton thanhToanBtn;
    private com.hyperbeast.swing.TextField tienKhachDuaTxt;
    private javax.swing.JLabel tienThuaLbl;
    private com.hyperbeast.swing.TextField timTenSPTxt;
    private javax.swing.JLabel tongGiaTriTxt;
    private com.hyperbeast.swing.PanelBorder tongTienLbl;
    private javax.swing.JLabel tongTienLbl2;
    private javax.swing.JButton xoaBtn;
    // End of variables declaration//GEN-END:variables
}
